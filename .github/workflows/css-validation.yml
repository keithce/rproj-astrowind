name: CSS Variable Validation

on:
  push:
    branches: [main, develop]
    paths:
      - 'src/components/CustomStyles.astro'
      - 'src/assets/styles/**'
      - 'scripts/css-*.js'
      - 'scripts/contrast-*.js'
      - 'scripts/visual-*.js'
  pull_request:
    branches: [main]
    paths:
      - 'src/components/CustomStyles.astro'
      - 'src/assets/styles/**'
      - 'scripts/css-*.js'
      - 'scripts/contrast-*.js'
      - 'scripts/visual-*.js'

jobs:
  css-validation:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '22'

      - name: Install Bun
        run: curl -fsSL https://bun.sh/install | bash
        shell: bash

      - name: Add Bun to PATH
        run: echo "$HOME/.bun/bin" >> $GITHUB_PATH

      - name: Install browser dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libnss3 \
            libatk-bridge2.0-0 \
            libxss1 \
            libgtk-3-0 \
            libasound2t64 \
            libgbm-dev \
            libxshmfence1 \
            libxcomposite1 \
            libxcursor1 \
            libxdamage1 \
            libxi6 \
            libxtst6

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build project
        if: github.event_name == 'push' || github.event.pull_request.head.repo.fork == false
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          NOTION_RR_RESOURCES_ID: ${{ secrets.NOTION_RR_RESOURCES_ID }}
        run: |
          echo "Validating environment variables..."
          if [ -z "$NOTION_TOKEN" ]; then
            echo "❌ Error: NOTION_TOKEN is not set"
            exit 1
          fi
          echo "✓ NOTION_TOKEN is set (length: ${#NOTION_TOKEN})"

          if [ -z "$NOTION_RR_RESOURCES_ID" ]; then
            echo "❌ Error: NOTION_RR_RESOURCES_ID is not set"
            exit 1
          fi
          echo "✓ NOTION_RR_RESOURCES_ID is set (length: ${#NOTION_RR_RESOURCES_ID})"

          echo "Starting build..."
          bun run build

      - name: Start development server
        if: github.event_name == 'push' || github.event.pull_request.head.repo.fork == false
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          NOTION_RR_RESOURCES_ID: ${{ secrets.NOTION_RR_RESOURCES_ID }}
        run: |
          bun run dev > dev.log 2>&1 &
          sleep 20
          cat dev.log
          curl -f http://localhost:4321 || (cat dev.log && exit 1)

      - name: Run contrast validation
        run: bun run test:contrast
        if: github.event_name == 'push' || github.event.pull_request.head.repo.fork == false

      - name: Run CSS variable validation
        run: bun run validate:css
        if: github.event_name == 'push' || github.event.pull_request.head.repo.fork == false

      - name: Run visual verification (headless)
        run: bun run visual-verify:ci
        env:
          DISPLAY: ''
        if: github.event_name == 'push' || github.event.pull_request.head.repo.fork == false

      - name: Generate documentation
        run: bun run docs:css
        if: github.event_name == 'push' || github.event.pull_request.head.repo.fork == false

      - name: Upload validation reports
        uses: actions/upload-artifact@v5
        if: always() && (github.event_name == 'push' || github.event.pull_request.head.repo.fork == false)
        with:
          name: css-validation-reports
          path: |
            visual-test-results/
            css-validation-results/
            docs/css-variables/
          retention-days: 30

      - name: Comment PR with results
        if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork == false
        uses: actions/github-script@v8
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            try {
              // Read validation results
              const contrastResults = JSON.parse(fs.readFileSync('css-validation-results/validation-report.json', 'utf8'));
              const visualResults = JSON.parse(fs.readFileSync('visual-test-results/test-report.json', 'utf8'));
              
              const totalVariables = contrastResults.summary.totalExpected;
              const lightDefined = contrastResults.summary.lightThemeDefined;
              const darkDefined = contrastResults.summary.darkThemeDefined;
              const recommendations = contrastResults.recommendations.length;
              
              const contrastPassed = visualResults.contrastTests.filter(t => t.passes.AA_NORMAL).length;
              const contrastTotal = visualResults.contrastTests.length;
              
              let comment = '## 🎨 CSS Variable Validation Results\n\n';
              comment += '### ✅ Summary\n';
              comment += `- **CSS Variables**: ${lightDefined}/${totalVariables} (light), ${darkDefined}/${totalVariables} (dark)\n`;
              comment += `- **Contrast Tests**: ${contrastPassed}/${contrastTotal} passed WCAG AA\n`;
              comment += `- **Recommendations**: ${recommendations} items to review\n\n`;
              comment += '### 📊 Details\n';
              
              if (recommendations > 0) {
                comment += '**⚠️ Recommendations:**\n';
                contrastResults.recommendations.forEach(r => {
                  comment += `- ${r.type.toUpperCase()}: ${r.message}\n`;
                });
              } else {
                comment += '**🎉 All validations passed!**\n';
              }
              
              comment += '\n### 📄 Reports\n';
              comment += '- CSS Variable Validation Report: css-validation-results/validation-report.html\n';
              comment += '- Visual Verification Report: visual-test-results/test-report.html\n';
              comment += '- CSS Documentation: docs/css-variables/index.html\n\n';
              comment += '*Generated by CSS Variable Validation workflow*';

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } catch (error) {
              console.log('Could not read validation results:', error.message);
            }

  accessibility-check:
    runs-on: ubuntu-latest
    needs: css-validation

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '22'

      - name: Install Bun
        run: curl -fsSL https://bun.sh/install | bash
        shell: bash

      - name: Add Bun to PATH
        run: echo "$HOME/.bun/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Install browser dependencies (Chrome)
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libnss3 \
            libatk-bridge2.0-0 \
            libxss1 \
            libgtk-3-0 \
            libasound2t64 \
            libgbm-dev \
            libxshmfence1 \
            libxcomposite1 \
            libxcursor1 \
            libxdamage1 \
            libxi6 \
            libxtst6

      - name: Install matching Chrome & ChromeDriver
        run: npx browser-driver-manager install chrome

      - name: Validate Notion configuration
        run: bun run validate:notion
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          NOTION_RR_RESOURCES_ID: ${{ secrets.NOTION_RR_RESOURCES_ID }}

      - name: Build project
        run: |
          echo "Validating environment variables..."
          if [ -z "$NOTION_TOKEN" ]; then
            echo "❌ Error: NOTION_TOKEN is not set"
            exit 1
          fi
          echo "✓ NOTION_TOKEN is set (length: ${#NOTION_TOKEN})"

          if [ -z "$NOTION_RR_RESOURCES_ID" ]; then
            echo "❌ Error: NOTION_RR_RESOURCES_ID is not set"
            exit 1
          fi
          echo "✓ NOTION_RR_RESOURCES_ID is set (length: ${#NOTION_RR_RESOURCES_ID})"

          echo "Starting build..."
          bun run build
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          NOTION_RR_RESOURCES_ID: ${{ secrets.NOTION_RR_RESOURCES_ID }}

      - name: Start server for accessibility testing
        run: |
          bun dev --port 4321 --host &
          # Wait for server readiness (max ~60 s)
          for i in {1..30}; do
            sleep 2
            if curl -sf http://localhost:4321 > /dev/null; then
              echo "✅ Server is up!"
              break
            fi
            echo "⏳ Waiting for server... ($i/30)"
            if [ $i -eq 30 ]; then
              echo "❌ Server did not start in time" >&2
              exit 1
            fi
          done
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          NOTION_RR_RESOURCES_ID: ${{ secrets.NOTION_RR_RESOURCES_ID }}

      - name: Run accessibility tests
        run: bun run axe:scan

      - name: Upload accessibility report
        uses: actions/upload-artifact@v5
        if: always()
        with:
          name: accessibility-report
          path: axe-results.json
          retention-days: 30
