---
import { getCollection } from 'astro:content';
import { Icon } from 'astro-icon/components';
import Layout from '~/layouts/PageLayout.astro';
import { formatTilDate } from '~/utils/til';

export const prerender = true;

export async function getStaticPaths() {
  const tilEntries = await getCollection('til', ({ data }) => {
    return !data.draft;
  });

  return tilEntries.map(entry => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

let { entry } = Astro.props;

// If entry is not available (during prefetching), fetch it directly
if (!entry) {
  const slug = Astro.params.slug;
  if (slug) {
    try {
      const tilEntries = await getCollection('til', ({ data }) => {
        return !data.draft;
      });

      entry = tilEntries.find(e => e.slug === slug) as typeof entry;
    } catch (error) {
      console.error('Error fetching TIL entry during prefetch:', error);
    }
  }
}

// Check if entry exists and has required properties
if (!entry || !entry.render) {
  throw new Error(`TIL entry not found or invalid for slug: ${Astro.params.slug}`);
}

const { Content } = await entry.render();

const { title, date, tags, description } = entry.data;
const formattedDate = formatTilDate(date);

const metadata = {
  title: `TIL: ${title}`,
  description: description,
};
---

<Layout metadata={metadata}>
  <section class="mx-auto max-w-4xl px-4 py-12 sm:px-6 lg:px-8 lg:py-16">
    <div class="mb-8">
      <a href="/til" class="text-primary hover:text-accent mb-6 inline-flex items-center gap-2 transition-colors">
        <Icon name="tabler:arrow-left" class="h-5 w-5" />
        <span>Back to TIL</span>
      </a>

      <h1 class="mb-4 text-3xl leading-tight font-bold tracking-tighter md:text-4xl">{title}</h1>

      <div class="flex flex-wrap items-center gap-4 text-sm">
        <span class="text-muted-foreground inline-flex items-center">
          <Icon name="tabler:calendar" class="mr-1 h-4 w-4" />
          {formattedDate}
        </span>

        <div class="flex flex-wrap gap-2">
          {
            tags.map(tag => (
              <a
                href={`/til?tag=${tag.toLowerCase().replace(/\s+/g, '-')}`}
                class="bg-primary/10 dark:bg-primary/20 text-primary hover:bg-primary/20 dark:hover:bg-primary/30 rounded-md px-2 py-1 text-xs font-medium transition-colors"
              >
                #{tag}
              </a>
            ))
          }
        </div>
      </div>
    </div>

    <div class="bg-card border-border overflow-hidden rounded-lg border shadow-sm">
      <div class="p-6 sm:p-8">
        <div class="prose-enhanced dark:prose-invert max-w-none">
          <Content />
        </div>
      </div>
    </div>

    <div class="mt-8 text-center">
      <a href="/til" class="text-primary hover:text-accent inline-flex items-center gap-2 transition-colors">
        <Icon name="tabler:arrow-left" class="h-5 w-5" />
        <span>Back to all TIL entries</span>
      </a>
    </div>
  </section>
</Layout>
