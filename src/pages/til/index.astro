---
import { Icon } from 'astro-icon/components';
import Layout from '~/layouts/PageLayout.astro';
import TilFilter from '~/components/til/TilFilter.astro';
import TilViewToggle from '~/components/til/TilViewToggle.astro';
import TilSearch from '~/components/til/TilSearch.astro';
import TilSocialFeed from '~/components/til/TilSocialFeed.astro';
import { fetchTilEntries, findTilTags, findTilEntriesByTag } from '~/utils/til';
import type { TilEntry } from '~/utils/til';
import Header from '~/components/widgets/Header.astro';
import { headerData } from '~/navigation';

// Get URL parameters
const tagParam = Astro.url.searchParams.get('tag');
const searchQuery = Astro.url.searchParams.get('q');
const viewParam = Astro.url.searchParams.get('view');
const currentView = viewParam === 'kanban' ? 'kanban' : 'feed';

// Fetch data
const tags = await findTilTags();
let entries: TilEntry[] = await fetchTilEntries();

// Apply tag filtering if specified
if (tagParam) {
  entries = await findTilEntriesByTag(tagParam);
}

// Apply search filtering if specified
if (searchQuery) {
  const query = searchQuery.toLowerCase();
  entries = entries.filter(
    entry =>
      entry.data.title.toLowerCase().includes(query) ||
      entry.data.description.toLowerCase().includes(query) ||
      entry.data.tags.some(tag => tag.toLowerCase().includes(query))
  );
}

// Prepare metadata
const metadata = {
  title: tagParam
    ? `TIL: #${tags.find(t => t.slug === tagParam)?.title || tagParam}`
    : searchQuery
      ? `TIL: Search results for "${searchQuery}"`
      : 'Today I Learned',
  description:
    'A collection of daily learning insights and discoveries in web development, programming, and technology.',
};
---

<Layout metadata={metadata}>
  <Fragment slot="header">
    <Header {...headerData} isSticky showRssFeed={false} showToggleTheme />
  </Fragment>
  <section class="mx-auto max-w-7xl px-4 py-8 sm:px-6 lg:px-8 lg:py-12">
    <div class="mb-8">
      <div class="flex flex-col md:flex-row md:items-center md:justify-between">
        <h1 class="leading-tighter mb-4 text-3xl font-bold tracking-tighter md:mb-0 md:text-4xl">
          Today I Learned
          {
            tagParam && (
              <span class="text-primary">
                : #{tags.find(t => t.slug === tagParam)?.title || tagParam}
              </span>
            )
          }
          {searchQuery && <span class="text-primary">: "{searchQuery}"</span>}
        </h1>

        <TilViewToggle currentView={currentView} />
      </div>

      <p class="text-muted-foreground mt-2 text-lg">
        A collection of daily discoveries and quick lessons in web development and technology
      </p>
    </div>

    <div class="grid grid-cols-1 gap-8 md:grid-cols-4">
      <!-- Sidebar -->
      <div class="md:col-span-1">
        <TilSearch class="mb-8" />
        <TilFilter tags={tags} selectedTag={tagParam ?? undefined} />
      </div>

      <!-- Main Content -->
      <div class="md:col-span-3">
        {
          entries.length > 0 ? (
            currentView === 'feed' ? (
              <TilSocialFeed entries={entries} />
            ) : null
          ) : (
            <div class="bg-muted/30 rounded-lg p-8 text-center">
              <Icon name="tabler:mood-sad" class="text-muted-foreground mx-auto h-16 w-16" />
              <h3 class="text-foreground mt-4 text-xl font-medium">No entries found</h3>
              <p class="text-muted-foreground mt-2">
                {tagParam
                  ? `No entries found with the tag #${tags.find(t => t.slug === tagParam)?.title || tagParam}`
                  : searchQuery
                    ? `No entries match your search for "${searchQuery}"`
                    : 'No entries found'}
              </p>
              <a href="/til" class="text-primary hover:text-accent mt-4 inline-block">
                View all entries
              </a>
            </div>
          )
        }

        <!-- Loading indicator for infinite scroll -->
        <div id="loading-indicator" class="hidden py-8 text-center">
          <div
            class="border-primary inline-block h-8 w-8 animate-spin rounded-full border-4 border-r-transparent"
            role="status"
          >
            <span class="sr-only">Loading...</span>
          </div>
          <p class="text-muted-foreground mt-2">Loading more entries...</p>
        </div>
      </div>
    </div>
  </section>
</Layout>
