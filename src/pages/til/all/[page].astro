---
import Layout from '~/layouts/PageLayout.astro';
import TilFilterSheet from '~/components/til/TilFilterSheet.astro';
import TilViewToggle from '~/components/til/TilViewToggle.astro';
import TilSocialFeed from '~/components/til/TilSocialFeed.astro';
import TilKanbanView from '~/components/til/TilKanbanView.astro';
import Pagination from '~/components/common/Pagination.astro';
import { getCollection } from 'astro:content';
import { findTilTags } from '~/utils/til';

export const prerender = true;

export async function getStaticPaths({ paginate }: any) {
  const allEntries = await (getCollection as any)('til');
  
  // Generate paginated routes for all entries
  return paginate(allEntries, {
    params: { tag: 'all' },
    pageSize: 10
  });
}

const { page } = Astro.props as { page: any };
const params = Astro.params as { tag: string; page: string };

// Get URL parameters
const searchQuery = Astro.url.searchParams.get('search') || null;
const viewParam = Astro.url.searchParams.get('view') || 'feed';

// Filter entries based on search query (client-side filtering for search)
let displayEntries = page.data;
if (searchQuery) {
  const searchTerm = searchQuery.toLowerCase();
  displayEntries = page.data.filter((entry: any) => {
    const data = entry.data;
    const title = data.title || '';
    const summary = data.summary || '';
    return (
      title.toLowerCase().includes(searchTerm) ||
      summary.toLowerCase().includes(searchTerm)
    );
  });
}

// Update pagination info for search results
const totalEntries = searchQuery ? displayEntries.length : page.total;
const totalPages = Math.ceil(totalEntries / page.size);
const currentPage = parseInt(params.page);

// Generate title
const title = 'Today I Learned';
const pageTitle = `${title} (Page ${currentPage} of ${totalPages})`;

// SEO metadata
const seoTitle = searchQuery ? `${title}: "${searchQuery}" - Page ${currentPage}` : pageTitle;
const seoDescription = `Today I Learned entries. ${page.total} entries found.`;
---

<Layout>
  <div class="px-6 py-8 mx-auto max-w-7xl md:px-8">
    <div class="mb-8">
      <h1 class="mb-4 text-3xl font-bold tracking-tighter leading-tighter md:mb-0 md:text-4xl">
        {title}
        {searchQuery && <span class="text-primary">: "{searchQuery}"</span>}
        <span class="text-lg font-normal text-muted-foreground">(Page {currentPage} of {totalPages})</span>
      </h1>
    </div>

    <!-- Filters and View Toggle -->
    <div class="flex flex-col gap-4 mb-8 md:flex-row md:items-center md:justify-between">
      <TilFilterSheet tags={await findTilTags()} selectedTag={undefined} />
      <TilViewToggle currentView={viewParam as "feed" | "kanban"} />
    </div>

    <!-- Search Results or Content -->
    {displayEntries.length > 0 ? (
      <div>
        {viewParam === 'feed' ? (
          <TilSocialFeed entries={displayEntries} />
        ) : (
          <TilKanbanView entries={displayEntries} />
        )}
        
        <!-- Pagination -->
        <div class="mt-8">
          <Pagination 
            currentPage={currentPage}
            lastPage={totalPages}
            prevUrl={page.url.prev}
            nextUrl={page.url.next}
            firstUrl={page.url.first}
            lastUrl={page.url.last}
            baseUrl="/til/all"
            queryParams={Astro.url.searchParams}
          />
        </div>
      </div>
    ) : (
      <div class="py-12 text-center">
        <h2 class="mb-2 text-xl font-semibold text-muted-foreground">
          {searchQuery ? 'No search results found' : 'No entries found'}
        </h2>
        <p class="mb-4 text-muted-foreground">
          {searchQuery 
            ? `Try searching for something else or browse all entries.`
            : `No entries available.`
          }
        </p>
      </div>
    )}
  </div>
</Layout>
