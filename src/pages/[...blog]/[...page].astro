---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro';

import Layout from '~/layouts/PageLayout.astro';
import BlogList from '~/components/blog/List.astro';
import Headline from '~/components/blog/Headline.astro';
import Pagination from '~/components/blog/Pagination.astro';
import PostTags from '~/components/blog/Tags.astro';

import { blogListRobots, getStaticPathsBlogList, findCategories, findTags } from '~/utils/blog';

export const prerender = true;

export const getStaticPaths = (async ({ paginate }) => {
  return await getStaticPathsBlogList({ paginate });
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { page } = Astro.props as Props;
const currentPage = page.currentPage ?? 1;

const allCategories = await findCategories();
const allTags = await findTags();

const metadata = {
  title: `Blog${currentPage > 1 ? ` â€” Page ${currentPage}` : ''}`,
  robots: {
    index: blogListRobots?.index && currentPage === 1,
    follow: blogListRobots?.follow,
  },
  openGraph: {
    type: 'blog',
  },
};
---

<Layout metadata={metadata}>
  <link href="/pagefind/pagefind-ui.css" rel="stylesheet" />
  <section class="px-6 sm:px-6 py-12 sm:py-16 lg:py-20 mx-auto max-w-4xl">
    <Headline
      subtitle="A statically generated blog example with news, tutorials, resources and other interesting content related to AstroWind"
    >
      Resonant Projects Blog
    </Headline>
    <div id="search"></div>
    <BlogList posts={page.data} />
    <Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />

    <PostTags tags={allCategories} class="mb-2" title="Search by Categories:" isCategory />
    <PostTags tags={allTags} title="Search by Tags:" />
  </section>
  <script>
    function initPagefind() {
      // @ts-expect-error PagefindUI is loaded from external script
      if (typeof PagefindUI !== 'undefined') {
        // @ts-expect-error PagefindUI is loaded from external script
        new PagefindUI({
          element: '#search',
          showSubResults: true,
          resetStyles: false,
          showEmptyFilters: false,
          processResult: function (result) {
            result.url = result.url.replace('client/', '').replace(/\/$/, '');
            return result;
          },
        });
      }
    }

    function loadPagefindAndInit() {
      // @ts-expect-error PagefindUI is loaded from external script
      if (typeof PagefindUI === 'undefined') {
        const script = document.createElement('script');
        script.src = '/pagefind/pagefind-ui.js';
        script.onload = initPagefind;
        document.body.appendChild(script);
      } else {
        initPagefind();
      }
    }

    window.addEventListener('DOMContentLoaded', loadPagefindAndInit);
    window.addEventListener('astro:after-swap', loadPagefindAndInit);
  </script>
</Layout>
