---
import { Sheet, SheetContent, SheetHeader, SheetTitle, SheetTrigger } from '~/components/starwind/sheet';
import { Button } from '~/components/starwind/button';
import Filter from '@tabler/icons/outline/filter.svg';

export interface Props {
  categories: string[];
  types: string[];
  selectedCategory?: string;
  selectedType?: string;
  class?: string;
}

const { categories, types, selectedCategory, selectedType, class: className = '' } = Astro.props;

// Helper function to create filter URL
const createFilterUrl = (category?: string, type?: string, search?: string) => {
  const params = new URLSearchParams();
  if (search) params.set('q', search);

  const queryString = params.toString();

  // If both category and type are selected, use the combined route
  if (category && type) {
    return `/resources/category/${category}/type/${type}/1${queryString ? `?${queryString}` : ''}`;
  } else if (category) {
    return `/resources/category/${category}/1${queryString ? `?${queryString}` : ''}`;
  } else if (type) {
    return `/resources/type/${type}/1${queryString ? `?${queryString}` : ''}`;
  } else {
    return `/resources/all/1${queryString ? `?${queryString}` : ''}`;
  }
};

// Get current search query from URL
const urlParams = new URLSearchParams(Astro.url.search);
const searchQuery = urlParams.get('q');
---

<div class={`rr-filter-sheet ${className}`}>
  <Sheet>
    <SheetTrigger asChild>
      <Button variant="outline" size="sm" class="gap-2">
        <Filter class="size-4" />
        Filter Resources
      </Button>
    </SheetTrigger>

    <SheetContent side="top" class="h-auto max-h-[80vh] w-full overflow-y-auto">
      <SheetHeader class="border-border border-b pb-6">
        <SheetTitle class="text-2xl font-bold">Filter Resources</SheetTitle>
        <p class="text-muted-foreground mt-2 text-sm">Narrow down your resource search by category and type</p>
      </SheetHeader>

      <div class="space-y-8 py-8">
        <!-- Category Filter -->
        <div class="bg-muted/30 rounded-lg p-6">
          <div class="mb-6 flex items-center justify-between">
            <div>
              <h2 class="text-foreground mb-1 text-xl font-semibold">Filter by Category</h2>
              <p class="text-muted-foreground text-sm">Choose a category to filter resources</p>
            </div>
            {
              selectedCategory && (
                <a
                  href={createFilterUrl(undefined, selectedType, searchQuery || undefined)}
                  class="text-primary hover:text-accent hover:bg-primary/10 rounded-md px-3 py-1 text-sm font-medium transition-colors"
                >
                  Clear category
                </a>
              )
            }
          </div>

          <div class="flex flex-wrap gap-3">
            {
              categories.map(category => (
                <a
                  href={createFilterUrl(category, selectedType, searchQuery || undefined)}
                  class={`rounded-full px-4 py-2.5 text-sm font-medium transition-all duration-200 ${
                    selectedCategory === category
                      ? 'bg-primary hover:bg-primary/90 text-white shadow-md'
                      : 'bg-background border-border text-foreground hover:bg-muted hover:border-primary/50 border shadow-sm'
                  }`}
                >
                  {category}
                </a>
              ))
            }
          </div>
        </div>

        <!-- Type Filter -->
        <div class="bg-muted/30 rounded-lg p-6">
          <div class="mb-6 flex items-center justify-between">
            <div>
              <h2 class="text-foreground mb-1 text-xl font-semibold">Filter by Type</h2>
              <p class="text-muted-foreground text-sm">Select a resource type to filter by</p>
            </div>
            {
              selectedType && (
                <a
                  href={createFilterUrl(selectedCategory || undefined, undefined, searchQuery || undefined)}
                  class="text-primary hover:text-accent hover:bg-primary/10 rounded-md px-3 py-1 text-sm font-medium transition-colors"
                >
                  Clear type
                </a>
              )
            }
          </div>

          <div class="flex flex-wrap gap-3">
            {
              types.map(type => (
                <a
                  href={createFilterUrl(selectedCategory, type, searchQuery || undefined)}
                  class={`rounded-full px-4 py-2.5 text-sm font-medium transition-all duration-200 ${
                    selectedType === type
                      ? 'bg-primary hover:bg-primary/90 text-white shadow-md'
                      : 'bg-background border-border text-foreground hover:bg-muted hover:border-primary/50 border shadow-sm'
                  }`}
                >
                  {type}
                </a>
              ))
            }
          </div>
        </div>

        <!-- Clear All Filters -->
        {
          (selectedCategory || selectedType) && (
            <div class="bg-destructive/10 border-destructive/20 rounded-lg border p-4">
              <div class="flex items-center justify-between">
                <div>
                  <h3 class="text-foreground mb-1 text-sm font-medium">Active Filters</h3>
                  <p class="text-muted-foreground text-xs">Clear all applied filters</p>
                </div>
                <a
                  href={createFilterUrl(undefined, undefined, searchQuery || undefined)}
                  class="text-destructive bg-background border-destructive/20 hover:bg-destructive/10 hover:border-destructive/30 inline-flex items-center rounded-md border px-4 py-2 text-sm font-medium transition-all duration-200"
                >
                  Clear all filters
                </a>
              </div>
            </div>
          )
        }
      </div>
    </SheetContent>
  </Sheet>
</div>
