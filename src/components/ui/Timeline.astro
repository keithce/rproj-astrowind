---
import { Icon } from 'astro-icon/components';
import { twMerge } from 'tailwind-merge';
import type { Item } from '~/types';

export interface Props {
  items?: Array<Item>;
  defaultIcon?: string;
  classes?: Record<string, string>;
}

const { items = [], classes = {}, defaultIcon } = Astro.props as Props;

const {
  container: containerClass = '',
  panel: panelClass = '',
  title: titleClass = '',
  description: descriptionClass = '',
  icon: defaultIconClass = 'text-primary border-primary',
  line: lineClass = 'bg-accent opacity-50',
} = classes;
---

{
  items && items.length > 0 && (
    <div class={containerClass}>
      {items.map(({ title, description, icon, classes: itemClasses = {} }, index = 0) => (
        <div class={twMerge('flex', panelClass, itemClasses?.panel)}>
          <div class="mr-4 flex flex-col items-center rtl:mr-0 rtl:ml-4">
            <div>
              <div class="flex items-center justify-center">
                {(icon || defaultIcon) && (
                  <Icon
                    name={icon || defaultIcon}
                    class={twMerge(
                      'bg-background h-10 w-10 rounded-full border-2 p-2',
                      defaultIconClass,
                      itemClasses?.icon
                    )}
                  />
                )}
              </div>
            </div>
            {index !== items.length - 1 && <div class={twMerge('h-full w-px', lineClass)} />}
          </div>
          <div class={`pt-1 ${index !== items.length - 1 ? 'pb-8' : ''}`}>
            {title && (
              <p
                class={twMerge('text-foreground text-xl font-bold', titleClass, itemClasses?.title)}
                set:html={title}
              />
            )}
            {description && (
              <p
                class={twMerge(
                  'text-muted-foreground mt-2',
                  descriptionClass,
                  itemClasses?.description
                )}
                set:html={description}
              />
            )}
          </div>
        </div>
      ))}
    </div>
  )
}
