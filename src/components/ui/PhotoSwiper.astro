---
import { getCloudinaryImageUrl } from '~/utils/cloudinary';

export interface Props {
  images: Array<{
    src: string;
    alt: string;
    title?: string;
  }>;
  title: string;
  category: string;
  className?: string;
}

const { images, title, category, className = '' } = Astro.props;

// Function to get Cloudinary image URL for the given category and image data
function getImageUrl(_category: string, image: { src: string }): string {
  // If src already contains a full URL (http/https), use it as-is
  if (image.src.startsWith('http://') || image.src.startsWith('https://')) {
    return image.src;
  }

  // If src starts with 'samples/', it's a legacy path - convert to Cloudinary
  if (image.src.startsWith('samples/')) {
    // Remove 'samples/' prefix and use the rest as the public ID
    const publicId = image.src.replace('samples/', 'portfolio/');
    return getCloudinaryImageUrl(publicId, { preset: 'portfolio' });
  }

  // Otherwise, assume it's already a proper Cloudinary public ID
  return getCloudinaryImageUrl(image.src, { preset: 'portfolio' });
}
---

<div class={`photo-swiper-container ${className}`}>
  <div class="swiper-header">
    <h3 class="swiper-title">
      {title}
    </h3>
    <p class="swiper-description">Explore our {category} photography collection</p>
  </div>

  <div class="swiper-wrapper-container">
    <div class="swiper mySwiper" data-category={category}>
      <div class="swiper-wrapper">
        {
          images.map((image) => (
            <div class="swiper-slide">
              <div class="slide-content">
                <img
                  src={getImageUrl(category, image)}
                  alt={image.alt}
                  width={800}
                  height={600}
                  loading="lazy"
                  class="slide-image"
                />
                {image.title && (
                  <div class="slide-overlay">
                    <p class="slide-title">{image.title}</p>
                  </div>
                )}
              </div>
            </div>
          ))
        }
      </div>
      <div class="swiper-button-next"></div>
      <div class="swiper-button-prev"></div>
      <div class="swiper-pagination"></div>
    </div>
  </div>
</div>

<style>
  .photo-swiper-container {
    position: relative;
    padding: 2rem 0;
    background: var(--aw-color-bg-page);
    border-radius: var(--radius);
  }

  .swiper-header {
    margin-bottom: 2rem;
    text-align: center;
    padding: 0 1rem;
  }

  .swiper-title {
    font-family: var(--aw-font-heading);
    font-size: 2rem;
    font-weight: 700;
    color: var(--aw-color-text-heading);
    margin-bottom: 0.75rem;
    line-height: 1.2;
  }

  .swiper-description {
    font-family: var(--aw-font-sans);
    font-size: 1.125rem;
    color: var(--aw-color-text-muted);
    margin: 0;
    font-weight: 400;
  }

  .swiper-wrapper-container {
    position: relative;
  }

  .swiper {
    width: 100%;
    height: 450px;
    padding: 0 60px 50px 60px;
    overflow: hidden;
  }

  .swiper-slide {
    display: flex;
    justify-content: center;
    align-items: center;
    background: transparent;
  }

  .slide-content {
    position: relative;
    width: 100%;
    height: 350px;
    border-radius: var(--radius);
    overflow: hidden;
    box-shadow:
      0 4px 6px -1px rgba(0, 0, 0, 0.1),
      0 2px 4px -1px rgba(0, 0, 0, 0.06);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    border: 1px solid var(--color-border);
  }

  .slide-content:hover {
    transform: translateY(-4px);
    box-shadow:
      0 20px 25px -5px rgba(0, 0, 0, 0.1),
      0 10px 10px -5px rgba(0, 0, 0, 0.04);
  }

  .slide-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .slide-content:hover .slide-image {
    transform: scale(1.05);
  }

  .slide-overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: linear-gradient(to top, rgba(0, 0, 0, 0.8) 0%, rgba(0, 0, 0, 0.4) 50%, transparent 100%);
    padding: 1.5rem;
    transform: translateY(100%);
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .slide-content:hover .slide-overlay {
    transform: translateY(0);
  }

  .slide-title {
    color: white;
    font-family: var(--aw-font-heading);
    font-size: 1.125rem;
    font-weight: 600;
    margin: 0;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
  }

  /* Swiper navigation buttons */
  .swiper-button-next,
  .swiper-button-prev {
    color: var(--aw-color-text-heading);
    background: rgba(255, 255, 255, 0.9);
    width: 44px;
    height: 44px;
    margin-top: -22px;
    border-radius: 50%;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
    transition: all 0.3s ease;
  }

  .swiper-button-next:after,
  .swiper-button-prev:after {
    font-size: 18px;
    font-weight: 600;
  }

  .swiper-button-next:hover,
  .swiper-button-prev:hover {
    background: white;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    transform: scale(1.05);
  }

  .swiper-button-prev {
    left: 10px;
  }

  .swiper-button-next {
    right: 10px;
  }

  /* Swiper pagination */
  .swiper-pagination {
    bottom: 10px;
  }

  .swiper-pagination-bullet {
    width: 12px;
    height: 12px;
    background: var(--aw-color-text-muted);
    opacity: 0.5;
    transition: all 0.3s ease;
  }

  .swiper-pagination-bullet-active {
    background: var(--aw-color-primary);
    opacity: 1;
    transform: scale(1.2);
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .swiper {
      padding: 0 40px 50px 40px;
      height: 400px;
    }

    .slide-content {
      height: 300px;
    }

    .swiper-button-next,
    .swiper-button-prev {
      width: 36px;
      height: 36px;
      margin-top: -18px;
    }

    .swiper-button-next:after,
    .swiper-button-prev:after {
      font-size: 14px;
    }

    .swiper-title {
      font-size: 1.5rem;
    }

    .swiper-description {
      font-size: 1rem;
    }
  }

  @media (max-width: 480px) {
    .swiper {
      padding: 0 20px 50px 20px;
      height: 350px;
    }

    .slide-content {
      height: 250px;
    }

    .swiper-button-next,
    .swiper-button-prev {
      display: none;
    }

    .photo-swiper-container {
      padding: 1rem 0;
    }

    .swiper-header {
      margin-bottom: 1rem;
    }
  }

  /* Dark mode adjustments */
  @media (prefers-color-scheme: dark) {
    .swiper-button-next,
    .swiper-button-prev {
      background: rgba(0, 0, 0, 0.8);
      color: white;
    }

    .swiper-button-next:hover,
    .swiper-button-prev:hover {
      background: rgba(0, 0, 0, 0.9);
    }
  }
</style>

<!-- Swiper will be initialized by external script -->
<script>
  // Define Swiper interface for type safety
  interface SwiperInstance {
    new (element: Element, options: SwiperOptions): void;
  }

  interface SwiperOptions {
    slidesPerView: number;
    spaceBetween: number;
    loop: boolean;
    navigation: {
      nextEl: string;
      prevEl: string;
    };
    pagination: {
      el: string;
      clickable: boolean;
    };
    breakpoints: Record<number, { slidesPerView: number; spaceBetween: number }>;
  }

  // Extend window interface to include Swiper
  declare global {
    interface Window {
      Swiper?: SwiperInstance;
    }
  }

  // Simple fallback initialization if Swiper is available globally
  document.addEventListener('DOMContentLoaded', () => {
    if (typeof window !== 'undefined' && window.Swiper) {
      const swipers = document.querySelectorAll('.mySwiper');

      swipers.forEach((swiperElement) => {
        new window.Swiper!(swiperElement, {
          slidesPerView: 1,
          spaceBetween: 20,
          loop: true,
          navigation: {
            nextEl: '.swiper-button-next',
            prevEl: '.swiper-button-prev',
          },
          pagination: {
            el: '.swiper-pagination',
            clickable: true,
          },
          breakpoints: {
            640: {
              slidesPerView: 1.2,
              spaceBetween: 20,
            },
            768: {
              slidesPerView: 1.5,
              spaceBetween: 30,
            },
            1024: {
              slidesPerView: 2,
              spaceBetween: 30,
            },
          },
        });
      });
    }
  });
</script>
