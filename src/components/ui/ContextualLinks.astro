---
import { Icon } from 'astro-icon/components';

interface ContextualLink {
  text: string;
  href: string;
  icon?: string;
  external?: boolean;
  description?: string;
}

export interface Props {
  links: ContextualLink[];
  title?: string;
  inline?: boolean;
  className?: string;
}

const { links, title, inline = false, className = '' } = Astro.props;
---

{
  links.length > 0 && (
    <div class={`contextual-links ${className}`}>
      {title && (
        <h4 class="text-lg font-semibold text-foreground mb-3 flex items-center gap-2">
          <Icon name="tabler:external-link" class="w-4 h-4 text-primary" aria-hidden="true" />
          {title}
        </h4>
      )}

      <div class={inline ? 'flex flex-wrap gap-2' : 'space-y-2'}>
        {links.map((link) => (
          <a
            href={link.href}
            class={`inline-flex items-center gap-2 px-3 py-2 rounded-md text-sm font-medium transition-colors duration-200 ${
              inline
                ? 'bg-primary/10 text-primary hover:bg-primary/20 hover:text-primary-foreground'
                : 'text-primary hover:text-accent hover:bg-accent/10 border border-transparent hover:border-primary/20'
            }`}
            {...(link.external
              ? {
                  target: '_blank',
                  rel: 'noopener noreferrer',
                  'aria-label': `${link.text} (opens in new tab)`,
                }
              : {})}
          >
            {link.icon && <Icon name={link.icon} class="w-4 h-4" aria-hidden="true" />}

            <span>{link.text}</span>

            {link.external && <Icon name="tabler:external-link" class="w-3 h-3 opacity-70" aria-hidden="true" />}
          </a>
        ))}
      </div>

      {!inline && (
        <div class="mt-4 space-y-1">
          {links
            .filter((link) => link.description)
            .map((link) => (
              <div class="text-xs text-muted-foreground pl-6">
                <strong>{link.text}:</strong> {link.description}
              </div>
            ))}
        </div>
      )}
    </div>
  )
}

<style>
  .contextual-links a:focus-visible {
    outline: 2px solid var(--color-ring);
    outline-offset: 2px;
  }

  /* Prevent text overflow */
  .contextual-links a span {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
</style>
