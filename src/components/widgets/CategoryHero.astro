---
export interface Props {
  title: string;
  subtitle: string;
  description: string;
  backgroundImage?: string;
  className?: string;
}

const { title, subtitle, description, backgroundImage, className = '' } = Astro.props;
---

<section class={`category-hero ${className}`}>
  <div class="relative overflow-hidden">
    {
      backgroundImage && (
        <div class="absolute inset-0 z-0">
          <img src={backgroundImage} alt={title} class="w-full h-full object-cover opacity-20" />
          <div class="absolute inset-0 bg-gradient-to-r from-[var(--aw-color-secondary)]/50 to-[var(--aw-color-primary)]/30" />
        </div>
      )
    }

    <div class="relative z-10 max-w-4xl mx-auto px-4 py-16 sm:py-20 text-center">
      <div class="mb-4">
        <span
          class="inline-block px-4 py-2 bg-[var(--aw-color-accent)]/20 dark:bg-[var(--aw-color-accent)]/30 text-[var(--aw-color-primary)] dark:text-[var(--aw-color-accent)] text-sm font-medium rounded-full"
        >
          {subtitle}
        </span>
      </div>

      <h2
        class="text-4xl sm:text-5xl font-bold text-[var(--aw-color-text-heading)] dark:text-[var(--aw-color-text-heading)] mb-6"
      >
        {title}
      </h2>

      <p class="text-lg sm:text-xl text-[var(--aw-color-text-muted)] max-w-3xl mx-auto leading-relaxed">
        {description}
      </p>
    </div>
  </div>
</section>

<style>
  .category-hero {
    background: linear-gradient(135deg, var(--aw-color-bg-page) 0%, var(--aw-color-accent) / 10 100%);
  }

  .dark .category-hero {
    background: linear-gradient(135deg, var(--aw-color-bg-page-dark) 0%, var(--aw-color-secondary) / 20 100%);
  }

  @media (max-width: 768px) {
    .category-hero .relative.z-10 {
      padding: 3rem 1rem;
    }
  }
</style>

