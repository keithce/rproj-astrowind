---
import { APP_BLOG } from 'astrowind:config';

import Grid from '~/components/blog/Grid.astro';

import { getBlogPermalink } from '~/utils/permalinks';
import { findLatestPosts } from '~/utils/blog';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import type { Widget } from '~/types';
import Button from '~/components/ui/Button.astro';
import ContextualLinks from '~/components/ui/ContextualLinks.astro';

export interface Props extends Widget {
  title?: string;
  linkText?: string;
  linkUrl?: string | URL;
  information?: string;
  count?: number;
  showContextualLinks?: boolean;
}

const {
  title = await Astro.slots.render('title'),
  linkText = 'View all posts',
  linkUrl = getBlogPermalink(),
  information = await Astro.slots.render('information'),
  count = 4,
  showContextualLinks = false,

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;

const posts = APP_BLOG.isEnabled ? await findLatestPosts({ count }) : [];

// Contextual links to services based on blog content
const blogContextualLinks = [
  {
    text: 'Audio Services',
    href: '/services/rhythm',
    icon: 'tabler:music',
    description: 'Professional music production and mastering',
  },
  {
    text: 'Creative Consulting',
    href: '/services/design',
    icon: 'tabler:settings',
    description: 'Workflow optimization and tech consulting',
  },
  {
    text: 'Photography Portfolio',
    href: '/services/color',
    icon: 'tabler:camera',
    description: 'Visual storytelling and color work',
  },
];
---

{
  APP_BLOG.isEnabled ? (
    <WidgetWrapper id={id} isDark={isDark} containerClass={classes?.container as string} bg={bg}>
      <div class="mb-8 flex flex-col lg:flex-row lg:justify-between">
        {title && (
          <div class="md:max-w-sm">
            <div
              class="group font-heading mb-2 text-3xl font-bold tracking-tight sm:text-4xl sm:leading-none"
              set:html={title}
            />
            {APP_BLOG.list.isEnabled && linkText && linkUrl && (
              <Button variant="link" href={linkUrl}>
                {' '}
                {linkText} Â»
              </Button>
            )}
          </div>
        )}

        {information && <div class="text-foreground/70 lg:max-w-md lg:text-sm" set:html={information} />}
      </div>

      <Grid posts={posts} />

      {showContextualLinks && (
        <div class="mt-8 pt-6 border-t border-border">
          <ContextualLinks links={blogContextualLinks} title="Interested in Our Services?" inline={true} />
        </div>
      )}
    </WidgetWrapper>
  ) : (
    <Fragment />
  )
}
